class Solution {
public:
    int countDistinct(vector<int>& nums, int k, int p) {
        unordered_map<int, unordered_set<int>> hashMap; //len, {hash}
        int res = 0;
        for (int i=0; i<nums.size(); i++){
            long long hash = 0, cntP = 0, mod = 1e9+7, pow = 200;
            for(int j=i; j < nums.size(); j++){
                if (nums[j] % p == 0) cntP++;
                if (cntP > k) break;
                hash = (hash * pow + nums[j]) % mod;
                if (hashMap[j-i+1].insert(hash).second) res++;
            }
        }
        return res;
    }
};
