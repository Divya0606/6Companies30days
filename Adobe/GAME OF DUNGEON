class Solution {
public:
    int calculateMinimumHP(vector<vector<int>>& dungeon) {
        int n = dungeon.size();
        
        int m = dungeon[0].size();
        
       
        
        vector<vector<int>> dp(n, vector<int> (m, 0));
        
       
        for(int i = n - 1; i >= 0; i--)
        {
            for(int j = m - 1; j >= 0; j--)
            {
                if(i == n - 1 && j == m - 1)
                {
                    dp[i][j] = dungeon[i][j] >= 0 ? 0 : dungeon[i][j];
                }
                else if(j == m - 1)
                {
                    dp[i][j] = dungeon[i][j] + dp[i + 1][j] >= 0 ? 0 : (dungeon[i][j] + dp[i + 1][j]);
                }
                else if(i == n - 1)
                {
                    dp[i][j] = dungeon[i][j] + dp[i][j + 1] >= 0 ? 0 : (dungeon[i][j] + dp[i][j + 1]);
                }
                else
                {
                    int right = dungeon[i][j] + dp[i][j + 1] >= 0 ? 0 : (dungeon[i][j] + dp[i][j + 1]);
                    
                    int down = dungeon[i][j] + dp[i + 1][j] >= 0 ? 0 : (dungeon[i][j] + dp[i + 1][j]);
                    
                    dp[i][j] = max(right, down);
                }
            }
        }
        
        return -dp[0][0] + 1;
    }
};
